# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import api_pb2 as api__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in api_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DexStub(object):
    """#############################################################
    ## Service Definitions
    #############################################################

    Dex represents the main dex gRPC service.
    RPC return types use original custom Resp messages for compatibility
    with the existing server/api.go implementation.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetClient = channel.unary_unary(
                '/api.Dex/GetClient',
                request_serializer=api__pb2.GetClientReq.SerializeToString,
                response_deserializer=api__pb2.GetClientResp.FromString,
                _registered_method=True)
        self.CreateClient = channel.unary_unary(
                '/api.Dex/CreateClient',
                request_serializer=api__pb2.CreateClientReq.SerializeToString,
                response_deserializer=api__pb2.CreateClientResp.FromString,
                _registered_method=True)
        self.UpdateClient = channel.unary_unary(
                '/api.Dex/UpdateClient',
                request_serializer=api__pb2.UpdateClientReq.SerializeToString,
                response_deserializer=api__pb2.UpdateClientResp.FromString,
                _registered_method=True)
        self.DeleteClient = channel.unary_unary(
                '/api.Dex/DeleteClient',
                request_serializer=api__pb2.DeleteClientReq.SerializeToString,
                response_deserializer=api__pb2.DeleteClientResp.FromString,
                _registered_method=True)
        self.CreatePassword = channel.unary_unary(
                '/api.Dex/CreatePassword',
                request_serializer=api__pb2.CreatePasswordReq.SerializeToString,
                response_deserializer=api__pb2.CreatePasswordResp.FromString,
                _registered_method=True)
        self.UpdatePassword = channel.unary_unary(
                '/api.Dex/UpdatePassword',
                request_serializer=api__pb2.UpdatePasswordReq.SerializeToString,
                response_deserializer=api__pb2.UpdatePasswordResp.FromString,
                _registered_method=True)
        self.DeletePassword = channel.unary_unary(
                '/api.Dex/DeletePassword',
                request_serializer=api__pb2.DeletePasswordReq.SerializeToString,
                response_deserializer=api__pb2.DeletePasswordResp.FromString,
                _registered_method=True)
        self.ListPasswords = channel.unary_unary(
                '/api.Dex/ListPasswords',
                request_serializer=api__pb2.ListPasswordReq.SerializeToString,
                response_deserializer=api__pb2.ListPasswordResp.FromString,
                _registered_method=True)
        self.CreateConnector = channel.unary_unary(
                '/api.Dex/CreateConnector',
                request_serializer=api__pb2.CreateConnectorReq.SerializeToString,
                response_deserializer=api__pb2.CreateConnectorResp.FromString,
                _registered_method=True)
        self.UpdateConnector = channel.unary_unary(
                '/api.Dex/UpdateConnector',
                request_serializer=api__pb2.UpdateConnectorReq.SerializeToString,
                response_deserializer=api__pb2.UpdateConnectorResp.FromString,
                _registered_method=True)
        self.DeleteConnector = channel.unary_unary(
                '/api.Dex/DeleteConnector',
                request_serializer=api__pb2.DeleteConnectorReq.SerializeToString,
                response_deserializer=api__pb2.DeleteConnectorResp.FromString,
                _registered_method=True)
        self.ListConnectors = channel.unary_unary(
                '/api.Dex/ListConnectors',
                request_serializer=api__pb2.ListConnectorReq.SerializeToString,
                response_deserializer=api__pb2.ListConnectorResp.FromString,
                _registered_method=True)
        self.GetVersion = channel.unary_unary(
                '/api.Dex/GetVersion',
                request_serializer=api__pb2.VersionReq.SerializeToString,
                response_deserializer=api__pb2.VersionResp.FromString,
                _registered_method=True)
        self.GetDiscovery = channel.unary_unary(
                '/api.Dex/GetDiscovery',
                request_serializer=api__pb2.DiscoveryReq.SerializeToString,
                response_deserializer=api__pb2.DiscoveryResp.FromString,
                _registered_method=True)
        self.ListRefresh = channel.unary_unary(
                '/api.Dex/ListRefresh',
                request_serializer=api__pb2.ListRefreshReq.SerializeToString,
                response_deserializer=api__pb2.ListRefreshResp.FromString,
                _registered_method=True)
        self.RevokeRefresh = channel.unary_unary(
                '/api.Dex/RevokeRefresh',
                request_serializer=api__pb2.RevokeRefreshReq.SerializeToString,
                response_deserializer=api__pb2.RevokeRefreshResp.FromString,
                _registered_method=True)
        self.VerifyPassword = channel.unary_unary(
                '/api.Dex/VerifyPassword',
                request_serializer=api__pb2.VerifyPasswordReq.SerializeToString,
                response_deserializer=api__pb2.VerifyPasswordResp.FromString,
                _registered_method=True)


class DexServicer(object):
    """#############################################################
    ## Service Definitions
    #############################################################

    Dex represents the main dex gRPC service.
    RPC return types use original custom Resp messages for compatibility
    with the existing server/api.go implementation.
    """

    def GetClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClient(self, request, context):
        """Uses DeleteClientResp
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePassword(self, request, context):
        """Uses DeletePasswordResp
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPasswords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateConnector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConnector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConnector(self, request, context):
        """Uses DeleteConnectorResp
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnectors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDiscovery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRefresh(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeRefresh(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DexServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetClient': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClient,
                    request_deserializer=api__pb2.GetClientReq.FromString,
                    response_serializer=api__pb2.GetClientResp.SerializeToString,
            ),
            'CreateClient': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateClient,
                    request_deserializer=api__pb2.CreateClientReq.FromString,
                    response_serializer=api__pb2.CreateClientResp.SerializeToString,
            ),
            'UpdateClient': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClient,
                    request_deserializer=api__pb2.UpdateClientReq.FromString,
                    response_serializer=api__pb2.UpdateClientResp.SerializeToString,
            ),
            'DeleteClient': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClient,
                    request_deserializer=api__pb2.DeleteClientReq.FromString,
                    response_serializer=api__pb2.DeleteClientResp.SerializeToString,
            ),
            'CreatePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePassword,
                    request_deserializer=api__pb2.CreatePasswordReq.FromString,
                    response_serializer=api__pb2.CreatePasswordResp.SerializeToString,
            ),
            'UpdatePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePassword,
                    request_deserializer=api__pb2.UpdatePasswordReq.FromString,
                    response_serializer=api__pb2.UpdatePasswordResp.SerializeToString,
            ),
            'DeletePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePassword,
                    request_deserializer=api__pb2.DeletePasswordReq.FromString,
                    response_serializer=api__pb2.DeletePasswordResp.SerializeToString,
            ),
            'ListPasswords': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPasswords,
                    request_deserializer=api__pb2.ListPasswordReq.FromString,
                    response_serializer=api__pb2.ListPasswordResp.SerializeToString,
            ),
            'CreateConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConnector,
                    request_deserializer=api__pb2.CreateConnectorReq.FromString,
                    response_serializer=api__pb2.CreateConnectorResp.SerializeToString,
            ),
            'UpdateConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConnector,
                    request_deserializer=api__pb2.UpdateConnectorReq.FromString,
                    response_serializer=api__pb2.UpdateConnectorResp.SerializeToString,
            ),
            'DeleteConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConnector,
                    request_deserializer=api__pb2.DeleteConnectorReq.FromString,
                    response_serializer=api__pb2.DeleteConnectorResp.SerializeToString,
            ),
            'ListConnectors': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnectors,
                    request_deserializer=api__pb2.ListConnectorReq.FromString,
                    response_serializer=api__pb2.ListConnectorResp.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=api__pb2.VersionReq.FromString,
                    response_serializer=api__pb2.VersionResp.SerializeToString,
            ),
            'GetDiscovery': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDiscovery,
                    request_deserializer=api__pb2.DiscoveryReq.FromString,
                    response_serializer=api__pb2.DiscoveryResp.SerializeToString,
            ),
            'ListRefresh': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRefresh,
                    request_deserializer=api__pb2.ListRefreshReq.FromString,
                    response_serializer=api__pb2.ListRefreshResp.SerializeToString,
            ),
            'RevokeRefresh': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeRefresh,
                    request_deserializer=api__pb2.RevokeRefreshReq.FromString,
                    response_serializer=api__pb2.RevokeRefreshResp.SerializeToString,
            ),
            'VerifyPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyPassword,
                    request_deserializer=api__pb2.VerifyPasswordReq.FromString,
                    response_serializer=api__pb2.VerifyPasswordResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.Dex', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.Dex', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Dex(object):
    """#############################################################
    ## Service Definitions
    #############################################################

    Dex represents the main dex gRPC service.
    RPC return types use original custom Resp messages for compatibility
    with the existing server/api.go implementation.
    """

    @staticmethod
    def GetClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/GetClient',
            api__pb2.GetClientReq.SerializeToString,
            api__pb2.GetClientResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/CreateClient',
            api__pb2.CreateClientReq.SerializeToString,
            api__pb2.CreateClientResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/UpdateClient',
            api__pb2.UpdateClientReq.SerializeToString,
            api__pb2.UpdateClientResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/DeleteClient',
            api__pb2.DeleteClientReq.SerializeToString,
            api__pb2.DeleteClientResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/CreatePassword',
            api__pb2.CreatePasswordReq.SerializeToString,
            api__pb2.CreatePasswordResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/UpdatePassword',
            api__pb2.UpdatePasswordReq.SerializeToString,
            api__pb2.UpdatePasswordResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/DeletePassword',
            api__pb2.DeletePasswordReq.SerializeToString,
            api__pb2.DeletePasswordResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPasswords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/ListPasswords',
            api__pb2.ListPasswordReq.SerializeToString,
            api__pb2.ListPasswordResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/CreateConnector',
            api__pb2.CreateConnectorReq.SerializeToString,
            api__pb2.CreateConnectorResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/UpdateConnector',
            api__pb2.UpdateConnectorReq.SerializeToString,
            api__pb2.UpdateConnectorResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/DeleteConnector',
            api__pb2.DeleteConnectorReq.SerializeToString,
            api__pb2.DeleteConnectorResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListConnectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/ListConnectors',
            api__pb2.ListConnectorReq.SerializeToString,
            api__pb2.ListConnectorResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/GetVersion',
            api__pb2.VersionReq.SerializeToString,
            api__pb2.VersionResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDiscovery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/GetDiscovery',
            api__pb2.DiscoveryReq.SerializeToString,
            api__pb2.DiscoveryResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRefresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/ListRefresh',
            api__pb2.ListRefreshReq.SerializeToString,
            api__pb2.ListRefreshResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevokeRefresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/RevokeRefresh',
            api__pb2.RevokeRefreshReq.SerializeToString,
            api__pb2.RevokeRefreshResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Dex/VerifyPassword',
            api__pb2.VerifyPasswordReq.SerializeToString,
            api__pb2.VerifyPasswordResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class PlatformUserServiceStub(object):
    """--- PlatformUserService --- (Combined User CRUD and User-Role Assignment Mgmt)
    Uses google.protobuf.Empty for Delete/Remove operations following best practices for new code.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/api.PlatformUserService/CreateUser',
                request_serializer=api__pb2.CreatePlatformUserRequest.SerializeToString,
                response_deserializer=api__pb2.CreatePlatformUserResponse.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/api.PlatformUserService/GetUser',
                request_serializer=api__pb2.GetPlatformUserRequest.SerializeToString,
                response_deserializer=api__pb2.GetPlatformUserResponse.FromString,
                _registered_method=True)
        self.ListUsers = channel.unary_unary(
                '/api.PlatformUserService/ListUsers',
                request_serializer=api__pb2.ListPlatformUsersRequest.SerializeToString,
                response_deserializer=api__pb2.ListPlatformUsersResponse.FromString,
                _registered_method=True)
        self.UpdateUser = channel.unary_unary(
                '/api.PlatformUserService/UpdateUser',
                request_serializer=api__pb2.UpdatePlatformUserRequest.SerializeToString,
                response_deserializer=api__pb2.UpdatePlatformUserResponse.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/api.PlatformUserService/DeleteUser',
                request_serializer=api__pb2.DeletePlatformUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.AssignRoleToUser = channel.unary_unary(
                '/api.PlatformUserService/AssignRoleToUser',
                request_serializer=api__pb2.AssignRoleToUserRequest.SerializeToString,
                response_deserializer=api__pb2.AssignRoleToUserResponse.FromString,
                _registered_method=True)
        self.RemoveRoleFromUser = channel.unary_unary(
                '/api.PlatformUserService/RemoveRoleFromUser',
                request_serializer=api__pb2.RemoveRoleFromUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListUserAssignments = channel.unary_unary(
                '/api.PlatformUserService/ListUserAssignments',
                request_serializer=api__pb2.ListUserAssignmentsRequest.SerializeToString,
                response_deserializer=api__pb2.ListUserAssignmentsResponse.FromString,
                _registered_method=True)


class PlatformUserServiceServicer(object):
    """--- PlatformUserService --- (Combined User CRUD and User-Role Assignment Mgmt)
    Uses google.protobuf.Empty for Delete/Remove operations following best practices for new code.
    """

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Use Empty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignRoleToUser(self, request, context):
        """User Role Assignment Methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRoleFromUser(self, request, context):
        """Use Empty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserAssignments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlatformUserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=api__pb2.CreatePlatformUserRequest.FromString,
                    response_serializer=api__pb2.CreatePlatformUserResponse.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=api__pb2.GetPlatformUserRequest.FromString,
                    response_serializer=api__pb2.GetPlatformUserResponse.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=api__pb2.ListPlatformUsersRequest.FromString,
                    response_serializer=api__pb2.ListPlatformUsersResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=api__pb2.UpdatePlatformUserRequest.FromString,
                    response_serializer=api__pb2.UpdatePlatformUserResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=api__pb2.DeletePlatformUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AssignRoleToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignRoleToUser,
                    request_deserializer=api__pb2.AssignRoleToUserRequest.FromString,
                    response_serializer=api__pb2.AssignRoleToUserResponse.SerializeToString,
            ),
            'RemoveRoleFromUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRoleFromUser,
                    request_deserializer=api__pb2.RemoveRoleFromUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListUserAssignments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserAssignments,
                    request_deserializer=api__pb2.ListUserAssignmentsRequest.FromString,
                    response_serializer=api__pb2.ListUserAssignmentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.PlatformUserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.PlatformUserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PlatformUserService(object):
    """--- PlatformUserService --- (Combined User CRUD and User-Role Assignment Mgmt)
    Uses google.protobuf.Empty for Delete/Remove operations following best practices for new code.
    """

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformUserService/CreateUser',
            api__pb2.CreatePlatformUserRequest.SerializeToString,
            api__pb2.CreatePlatformUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformUserService/GetUser',
            api__pb2.GetPlatformUserRequest.SerializeToString,
            api__pb2.GetPlatformUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformUserService/ListUsers',
            api__pb2.ListPlatformUsersRequest.SerializeToString,
            api__pb2.ListPlatformUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformUserService/UpdateUser',
            api__pb2.UpdatePlatformUserRequest.SerializeToString,
            api__pb2.UpdatePlatformUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformUserService/DeleteUser',
            api__pb2.DeletePlatformUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AssignRoleToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformUserService/AssignRoleToUser',
            api__pb2.AssignRoleToUserRequest.SerializeToString,
            api__pb2.AssignRoleToUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveRoleFromUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformUserService/RemoveRoleFromUser',
            api__pb2.RemoveRoleFromUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUserAssignments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformUserService/ListUserAssignments',
            api__pb2.ListUserAssignmentsRequest.SerializeToString,
            api__pb2.ListUserAssignmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class PlatformAppRoleServiceStub(object):
    """--- PlatformAppRoleService --- (AppRole CRUD)
    Uses google.protobuf.Empty for Delete operation following best practices for new code.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePlatformAppRole = channel.unary_unary(
                '/api.PlatformAppRoleService/CreatePlatformAppRole',
                request_serializer=api__pb2.CreatePlatformAppRoleRequest.SerializeToString,
                response_deserializer=api__pb2.CreatePlatformAppRoleResponse.FromString,
                _registered_method=True)
        self.GetPlatformAppRole = channel.unary_unary(
                '/api.PlatformAppRoleService/GetPlatformAppRole',
                request_serializer=api__pb2.GetPlatformAppRoleRequest.SerializeToString,
                response_deserializer=api__pb2.GetPlatformAppRoleResponse.FromString,
                _registered_method=True)
        self.ListPlatformAppRoles = channel.unary_unary(
                '/api.PlatformAppRoleService/ListPlatformAppRoles',
                request_serializer=api__pb2.ListPlatformAppRolesRequest.SerializeToString,
                response_deserializer=api__pb2.ListPlatformAppRolesResponse.FromString,
                _registered_method=True)
        self.UpdatePlatformAppRole = channel.unary_unary(
                '/api.PlatformAppRoleService/UpdatePlatformAppRole',
                request_serializer=api__pb2.UpdatePlatformAppRoleRequest.SerializeToString,
                response_deserializer=api__pb2.UpdatePlatformAppRoleResponse.FromString,
                _registered_method=True)
        self.DeletePlatformAppRole = channel.unary_unary(
                '/api.PlatformAppRoleService/DeletePlatformAppRole',
                request_serializer=api__pb2.DeletePlatformAppRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class PlatformAppRoleServiceServicer(object):
    """--- PlatformAppRoleService --- (AppRole CRUD)
    Uses google.protobuf.Empty for Delete operation following best practices for new code.
    """

    def CreatePlatformAppRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlatformAppRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlatformAppRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlatformAppRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlatformAppRole(self, request, context):
        """Use Empty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlatformAppRoleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePlatformAppRole': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlatformAppRole,
                    request_deserializer=api__pb2.CreatePlatformAppRoleRequest.FromString,
                    response_serializer=api__pb2.CreatePlatformAppRoleResponse.SerializeToString,
            ),
            'GetPlatformAppRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlatformAppRole,
                    request_deserializer=api__pb2.GetPlatformAppRoleRequest.FromString,
                    response_serializer=api__pb2.GetPlatformAppRoleResponse.SerializeToString,
            ),
            'ListPlatformAppRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlatformAppRoles,
                    request_deserializer=api__pb2.ListPlatformAppRolesRequest.FromString,
                    response_serializer=api__pb2.ListPlatformAppRolesResponse.SerializeToString,
            ),
            'UpdatePlatformAppRole': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlatformAppRole,
                    request_deserializer=api__pb2.UpdatePlatformAppRoleRequest.FromString,
                    response_serializer=api__pb2.UpdatePlatformAppRoleResponse.SerializeToString,
            ),
            'DeletePlatformAppRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlatformAppRole,
                    request_deserializer=api__pb2.DeletePlatformAppRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.PlatformAppRoleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.PlatformAppRoleService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PlatformAppRoleService(object):
    """--- PlatformAppRoleService --- (AppRole CRUD)
    Uses google.protobuf.Empty for Delete operation following best practices for new code.
    """

    @staticmethod
    def CreatePlatformAppRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformAppRoleService/CreatePlatformAppRole',
            api__pb2.CreatePlatformAppRoleRequest.SerializeToString,
            api__pb2.CreatePlatformAppRoleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlatformAppRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformAppRoleService/GetPlatformAppRole',
            api__pb2.GetPlatformAppRoleRequest.SerializeToString,
            api__pb2.GetPlatformAppRoleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPlatformAppRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformAppRoleService/ListPlatformAppRoles',
            api__pb2.ListPlatformAppRolesRequest.SerializeToString,
            api__pb2.ListPlatformAppRolesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlatformAppRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformAppRoleService/UpdatePlatformAppRole',
            api__pb2.UpdatePlatformAppRoleRequest.SerializeToString,
            api__pb2.UpdatePlatformAppRoleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePlatformAppRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformAppRoleService/DeletePlatformAppRole',
            api__pb2.DeletePlatformAppRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class PlatformTokenServiceStub(object):
    """--- PlatformTokenService --- (Token CRUD + Verification)
    Uses google.protobuf.Empty for Delete operation following best practices for new code.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePlatformToken = channel.unary_unary(
                '/api.PlatformTokenService/CreatePlatformToken',
                request_serializer=api__pb2.CreatePlatformTokenRequest.SerializeToString,
                response_deserializer=api__pb2.CreatePlatformTokenResponse.FromString,
                _registered_method=True)
        self.GetPlatformToken = channel.unary_unary(
                '/api.PlatformTokenService/GetPlatformToken',
                request_serializer=api__pb2.GetPlatformTokenRequest.SerializeToString,
                response_deserializer=api__pb2.GetPlatformTokenResponse.FromString,
                _registered_method=True)
        self.ListPlatformTokens = channel.unary_unary(
                '/api.PlatformTokenService/ListPlatformTokens',
                request_serializer=api__pb2.ListPlatformTokensRequest.SerializeToString,
                response_deserializer=api__pb2.ListPlatformTokensResponse.FromString,
                _registered_method=True)
        self.UpdatePlatformToken = channel.unary_unary(
                '/api.PlatformTokenService/UpdatePlatformToken',
                request_serializer=api__pb2.UpdatePlatformTokenRequest.SerializeToString,
                response_deserializer=api__pb2.UpdatePlatformTokenResponse.FromString,
                _registered_method=True)
        self.DeletePlatformToken = channel.unary_unary(
                '/api.PlatformTokenService/DeletePlatformToken',
                request_serializer=api__pb2.DeletePlatformTokenRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.VerifyPlatformToken = channel.unary_unary(
                '/api.PlatformTokenService/VerifyPlatformToken',
                request_serializer=api__pb2.VerifyPlatformTokenRequest.SerializeToString,
                response_deserializer=api__pb2.VerifyPlatformTokenResponse.FromString,
                _registered_method=True)


class PlatformTokenServiceServicer(object):
    """--- PlatformTokenService --- (Token CRUD + Verification)
    Uses google.protobuf.Empty for Delete operation following best practices for new code.
    """

    def CreatePlatformToken(self, request, context):
        """Create returns the secret ONCE. Client must store it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlatformToken(self, request, context):
        """Get/List never return the secret hash.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlatformTokens(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlatformToken(self, request, context):
        """Update allows changing ONLY the assigned role.
        Uses corrected request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlatformToken(self, request, context):
        """Use Empty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyPlatformToken(self, request, context):
        """Verify checks a presented secret against the stored hash.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlatformTokenServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePlatformToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlatformToken,
                    request_deserializer=api__pb2.CreatePlatformTokenRequest.FromString,
                    response_serializer=api__pb2.CreatePlatformTokenResponse.SerializeToString,
            ),
            'GetPlatformToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlatformToken,
                    request_deserializer=api__pb2.GetPlatformTokenRequest.FromString,
                    response_serializer=api__pb2.GetPlatformTokenResponse.SerializeToString,
            ),
            'ListPlatformTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlatformTokens,
                    request_deserializer=api__pb2.ListPlatformTokensRequest.FromString,
                    response_serializer=api__pb2.ListPlatformTokensResponse.SerializeToString,
            ),
            'UpdatePlatformToken': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlatformToken,
                    request_deserializer=api__pb2.UpdatePlatformTokenRequest.FromString,
                    response_serializer=api__pb2.UpdatePlatformTokenResponse.SerializeToString,
            ),
            'DeletePlatformToken': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlatformToken,
                    request_deserializer=api__pb2.DeletePlatformTokenRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'VerifyPlatformToken': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyPlatformToken,
                    request_deserializer=api__pb2.VerifyPlatformTokenRequest.FromString,
                    response_serializer=api__pb2.VerifyPlatformTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.PlatformTokenService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.PlatformTokenService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PlatformTokenService(object):
    """--- PlatformTokenService --- (Token CRUD + Verification)
    Uses google.protobuf.Empty for Delete operation following best practices for new code.
    """

    @staticmethod
    def CreatePlatformToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformTokenService/CreatePlatformToken',
            api__pb2.CreatePlatformTokenRequest.SerializeToString,
            api__pb2.CreatePlatformTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlatformToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformTokenService/GetPlatformToken',
            api__pb2.GetPlatformTokenRequest.SerializeToString,
            api__pb2.GetPlatformTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPlatformTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformTokenService/ListPlatformTokens',
            api__pb2.ListPlatformTokensRequest.SerializeToString,
            api__pb2.ListPlatformTokensResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlatformToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformTokenService/UpdatePlatformToken',
            api__pb2.UpdatePlatformTokenRequest.SerializeToString,
            api__pb2.UpdatePlatformTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePlatformToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformTokenService/DeletePlatformToken',
            api__pb2.DeletePlatformTokenRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyPlatformToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformTokenService/VerifyPlatformToken',
            api__pb2.VerifyPlatformTokenRequest.SerializeToString,
            api__pb2.VerifyPlatformTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class PlatformFederatedIdentityServiceStub(object):
    """--- PlatformFederatedIdentityService --- (Combined Identity Read/Delete and Identity-Role Assignment Mgmt)
    Uses google.protobuf.Empty for Delete/Remove operations following best practices for new code.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPlatformFederatedIdentity = channel.unary_unary(
                '/api.PlatformFederatedIdentityService/GetPlatformFederatedIdentity',
                request_serializer=api__pb2.GetPlatformFederatedIdentityRequest.SerializeToString,
                response_deserializer=api__pb2.GetPlatformFederatedIdentityResponse.FromString,
                _registered_method=True)
        self.ListPlatformFederatedIdentities = channel.unary_unary(
                '/api.PlatformFederatedIdentityService/ListPlatformFederatedIdentities',
                request_serializer=api__pb2.ListPlatformFederatedIdentitiesRequest.SerializeToString,
                response_deserializer=api__pb2.ListPlatformFederatedIdentitiesResponse.FromString,
                _registered_method=True)
        self.DeletePlatformFederatedIdentity = channel.unary_unary(
                '/api.PlatformFederatedIdentityService/DeletePlatformFederatedIdentity',
                request_serializer=api__pb2.DeletePlatformFederatedIdentityRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.AssignRoleToIdentity = channel.unary_unary(
                '/api.PlatformFederatedIdentityService/AssignRoleToIdentity',
                request_serializer=api__pb2.AssignRoleToIdentityRequest.SerializeToString,
                response_deserializer=api__pb2.AssignRoleToIdentityResponse.FromString,
                _registered_method=True)
        self.RemoveRoleFromIdentity = channel.unary_unary(
                '/api.PlatformFederatedIdentityService/RemoveRoleFromIdentity',
                request_serializer=api__pb2.RemoveRoleFromIdentityRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListIdentityAssignments = channel.unary_unary(
                '/api.PlatformFederatedIdentityService/ListIdentityAssignments',
                request_serializer=api__pb2.ListIdentityAssignmentsRequest.SerializeToString,
                response_deserializer=api__pb2.ListIdentityAssignmentsResponse.FromString,
                _registered_method=True)


class PlatformFederatedIdentityServiceServicer(object):
    """--- PlatformFederatedIdentityService --- (Combined Identity Read/Delete and Identity-Role Assignment Mgmt)
    Uses google.protobuf.Empty for Delete/Remove operations following best practices for new code.
    """

    def GetPlatformFederatedIdentity(self, request, context):
        """Create often implicit via login flow, but Get/List/Delete useful for admin.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlatformFederatedIdentities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlatformFederatedIdentity(self, request, context):
        """Use Empty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignRoleToIdentity(self, request, context):
        """Identity Role Assignment Methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRoleFromIdentity(self, request, context):
        """Use Empty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListIdentityAssignments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlatformFederatedIdentityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPlatformFederatedIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlatformFederatedIdentity,
                    request_deserializer=api__pb2.GetPlatformFederatedIdentityRequest.FromString,
                    response_serializer=api__pb2.GetPlatformFederatedIdentityResponse.SerializeToString,
            ),
            'ListPlatformFederatedIdentities': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlatformFederatedIdentities,
                    request_deserializer=api__pb2.ListPlatformFederatedIdentitiesRequest.FromString,
                    response_serializer=api__pb2.ListPlatformFederatedIdentitiesResponse.SerializeToString,
            ),
            'DeletePlatformFederatedIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlatformFederatedIdentity,
                    request_deserializer=api__pb2.DeletePlatformFederatedIdentityRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AssignRoleToIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignRoleToIdentity,
                    request_deserializer=api__pb2.AssignRoleToIdentityRequest.FromString,
                    response_serializer=api__pb2.AssignRoleToIdentityResponse.SerializeToString,
            ),
            'RemoveRoleFromIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRoleFromIdentity,
                    request_deserializer=api__pb2.RemoveRoleFromIdentityRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListIdentityAssignments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListIdentityAssignments,
                    request_deserializer=api__pb2.ListIdentityAssignmentsRequest.FromString,
                    response_serializer=api__pb2.ListIdentityAssignmentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.PlatformFederatedIdentityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.PlatformFederatedIdentityService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PlatformFederatedIdentityService(object):
    """--- PlatformFederatedIdentityService --- (Combined Identity Read/Delete and Identity-Role Assignment Mgmt)
    Uses google.protobuf.Empty for Delete/Remove operations following best practices for new code.
    """

    @staticmethod
    def GetPlatformFederatedIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformFederatedIdentityService/GetPlatformFederatedIdentity',
            api__pb2.GetPlatformFederatedIdentityRequest.SerializeToString,
            api__pb2.GetPlatformFederatedIdentityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPlatformFederatedIdentities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformFederatedIdentityService/ListPlatformFederatedIdentities',
            api__pb2.ListPlatformFederatedIdentitiesRequest.SerializeToString,
            api__pb2.ListPlatformFederatedIdentitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePlatformFederatedIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformFederatedIdentityService/DeletePlatformFederatedIdentity',
            api__pb2.DeletePlatformFederatedIdentityRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AssignRoleToIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformFederatedIdentityService/AssignRoleToIdentity',
            api__pb2.AssignRoleToIdentityRequest.SerializeToString,
            api__pb2.AssignRoleToIdentityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveRoleFromIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformFederatedIdentityService/RemoveRoleFromIdentity',
            api__pb2.RemoveRoleFromIdentityRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListIdentityAssignments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.PlatformFederatedIdentityService/ListIdentityAssignments',
            api__pb2.ListIdentityAssignmentsRequest.SerializeToString,
            api__pb2.ListIdentityAssignmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
